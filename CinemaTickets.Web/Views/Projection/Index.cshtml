
@{
    ViewBag.Title = "Purchase tickets";
}

<h2>Choose projection for: @ViewBag.MovieTitle</h2>
<hr />

@if (Model.Count == 0)
{
    <h3>There are no projections for this movie available.</h3>
    return;
}
<p>
    * <i>
        When you are choosing ticket types click "Confirm tickets" button in order to confirm the tickets and see the final price. Afterwards click "Continue to seats selection"
        button to select the seats for the projection.
    </i>
</p><hr />
<form>
    <div class="form-group">
        <label for="projectionSelect">Select a projection</label>
        <select class="form-control" id="projectionSelect">
            <option selected>Select a projection...</option>
            @foreach (var projection in Model)
            {
                <option projectionID="@projection.ProjectionID">@projection.TimeOfProjection</option>
            }
        </select>
    </div>
    <p><i>Select ticket type below:</i></p>
    <div id="ticketTypes">
        <div class="form-group">
            <label for="kidsRetirees" style="padding-left:10px;">For kids/retirees: @CinemaTickets.Web.Constants.TicketPrices.kidsRetirees</label>
            <select class="form-control" id="kidsRetirees">
                <option selected>0</option>
                @for (int i = 1; i <= 10; i++)
                {
                    <option>@i</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="students" style="padding-left:10px;">For students: @CinemaTickets.Web.Constants.TicketPrices.students</label>
            <select class="form-control" id="students">
                <option selected>0</option>
                @for (int i = 1; i <= 10; i++)
                {
                    <option>@i</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="adults" style="padding-left:10px;">For adults: @CinemaTickets.Web.Constants.TicketPrices.adults</label>
            <select class="form-control" id="adults">
                <option selected>0</option>
                @for (int i = 1; i <= 10; i++)
                {
                    <option>@i</option>
                }
            </select>
        </div>
        <button class="btn btn-primary" id="chooseTicketTypes" style="margin-bottom:10px;">Confirm tickets</button>
    </div>
    <div class="form-group">
        <label for="totalPrice">Total price</label>
        <input class="form-control" type="text" name="totalPriceBox" id="totalPriceBox" disabled value="0" />
    </div>
    <button id="selectSeatsButton" class="btn btn-primary">Continue to seats selection...</button>
</form>


@section Scripts{
    <script>
        var kidsRetireesPrice = @CinemaTickets.Web.Constants.TicketPrices.kidsRetirees;
        var studentsPrice = @CinemaTickets.Web.Constants.TicketPrices.students;
        var adultsPrice = @CinemaTickets.Web.Constants.TicketPrices.adults;
        var projectionID = 0;
        var projectionTime = '';
        var kidsRetirees = 0;
        var students = 0;
        var adults = 0;

        $('#projectionSelect').change(function () {
            projectionID = $(this).find(':selected').attr('projectionID');
            projectionTime = $(this).find(':selected').val();
        });

        $('#kidsRetirees').change(function () {
            kidsRetirees = Number($(this).find(':selected').val());
        });

        $('#students').change(function () {
            students = Number($(this).find(':selected').val());
        });

        $('#adults').change(function () {
            adults = Number($(this).find(':selected').val());
        });

        $('#chooseTicketTypes').click(function (e) {
            e.preventDefault();
            var kidsRetireesTotalPrice = kidsRetireesPrice * kidsRetirees;
            var studentsTotalPrice = studentsPrice * students;
            var adultsTotalPrice = adultsPrice * adults;
            var totalTicketsPrice = Number(kidsRetireesTotalPrice + studentsTotalPrice + adultsTotalPrice).toFixed(2);
            $('#totalPriceBox').val(totalTicketsPrice + "$");
        });

        $('#selectSeatsButton').click(function (e) {
            e.preventDefault();

            swal({
                title: "Are you sure?",
                text: "You will proceed with the selected data!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#77c5d5",
                confirmButtonText: "Yes, proceed!",
                closeOnConfirm: false
            },
            function(){
                var totalPriceOfTickets = $('#totalPriceBox').val().slice(0,-1);
                var fd = new FormData();
                fd.append("kidsRetirees", kidsRetirees);
                fd.append("students", students);
                fd.append("adults", adults);
                fd.append("projectionID", projectionID);
                fd.append("totalPrice", totalPriceOfTickets);
                fd.append("projectionTime",projectionTime);

                $.ajax({
                    url: "@Url.Action("RedirectProjectionData", "Projection")",
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: fd,
                    success: successCallback,
                    error: errorCallback
                })
            });
        })

        function successCallback() {
            window.location.href = "/Seat/Index";
        }
        function errorCallback() {
            swal("Opsss...", "Something went wrong! :(", "error");
        }
    </script>
}